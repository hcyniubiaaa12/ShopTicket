<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.PerformancesMapper">


    <select id="getAllPerformance" resultType="com.shop.dto.PerformanceDto">
        SELECT
            min_pr.min_price       AS min_price,
            e.id                   AS event_id,
            e.title,
            i.url,                                  -- 注意：如果每场图不同，这里会出问题（后面说）
            MIN(p.start_time)      AS first_show,
            MAX(p.start_time)      AS last_show,
            e.artist,
            v.name as venue,
            c.name as city,
            c.id AS cityId


        FROM performances p
                 JOIN EVENTS e ON e.id = p.event_id
                 JOIN (SELECT MIN(price) min_price, event_id
                       FROM price
                       WHERE price.`is_deleted` = 0
                       GROUP BY event_id) min_pr
                      ON min_pr.event_id = e.id
                 JOIN venues v ON p.venue_id = v.id
                 JOIN city c ON v.city_id = c.id

                 JOIN images i ON e.id = i.event_id AND i.is_deleted = 0 -- 改为关联 event 的图，不是 performance

        WHERE p.is_deleted = 0
          AND p.status = 0
          AND e.is_deleted = 0
          AND e.status = 0
          AND i.is_deleted = 0


        GROUP BY e.id,
                 e.title,
                 c.name,
                 v.name,
                 i.url,
                 c.id


        ORDER BY min_price
    </select>
    <select id="getPerformanceById" resultType="com.shop.dto.PerformanceDto">
        SELECT min_pr.min_price  AS min_price,
               e.id              AS event_id,
               e.title,
               i.url, -- 注意：如果每场图不同，这里会出问题（后面说）
               MIN(p.start_time) AS first_show,
               MAX(p.start_time) AS last_show,
               e.artist,
               v.name            as venue,
               c.name            as city,
               c.id AS cityId,
               t.name           as typeName



        FROM performances p
                 JOIN EVENTS e ON e.id = p.event_id
                 JOIN (SELECT MIN(price) min_price, event_id
                       FROM price
                       WHERE price.`is_deleted` = 0
                       GROUP BY event_id) min_pr
                      ON min_pr.event_id = e.id
                 JOIN venues v ON p.venue_id = v.id
                 JOIN city c ON v.city_id = c.id
                 JOIN event_type t ON e.type_id = t.id

                 JOIN images i ON e.id = i.event_id AND i.is_deleted = 0 -- 改为关联 event 的图，不是 performance

        WHERE p.is_deleted = 0
          AND p.status = 0
          AND e.is_deleted = 0
          AND e.status = 0
          AND i.is_deleted = 0
          AND t.id = #{id}


        GROUP BY e.id,
                 e.title,
                 c.name,
                 v.name,
                 i.url,
                 c.id


        ORDER BY min_price
    </select>
    <select id="getPerformanceByEventId" resultType="com.shop.dto.PerformanceDto">

        SELECT e.id              as event_id,
               e.title,
               min_pr.min_price  as min_price,
               v.name            AS venue,
               c.name            AS city,
               i.url,
               p.start_time       AS firstShow,
               p.start_time       as lastShow,
               c.id as cityId,
               p.duration ,
               p.description,
               p.available_seats
        FROM performances p
                 JOIN EVENTS e ON p.event_id = e.id
                 JOIN (SELECT MIN(price) min_price, event_id
                       FROM price
                       WHERE price.`is_deleted` = 0
                       GROUP BY event_id) min_pr
                      ON min_pr.event_id = e.id
                 JOIN venues v ON p.venue_id = v.id
                 JOIN city c ON v.city_id = c.id
                 JOIN images i ON e.id = i.event_id
        WHERE p.is_deleted = 0
          AND v.is_deleted = 0
          AND c.is_deleted = 0
          AND i.is_deleted = 0
          AND e.id = #{id}
          and c.id = #{cityId}
        GROUP BY e.id,
                 e.title,
                 v.name,
                 c.name,
                 p.description,
                 p.available_seats,
                 p.duration,
                 i.url,
                 c.id,
                 p.start_time
        ORDER BY min_price

    </select>

    <select id="getTimeByEventId" resultType="com.shop.dto.TimeDto">
        -- 查询苏州站有哪些演出时间
        SELECT DISTINCT p.id,
                        p.start_time time
        FROM performances p
                 JOIN events e ON p.event_id = e.id
                 JOIN venues v ON p.venue_id = v.id
                 JOIN city c ON c.id = v.city_id
        WHERE c.id = #{cityId}
          AND e.id = #{id}
        ORDER BY p.start_time;
    </select>

</mapper>
